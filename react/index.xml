<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reacts on 学习笔记</title>
    <link>https://lijianqiang1997.github.io/react/</link>
    <description>Recent content in Reacts on 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Dec 2019 19:39:52 +0800</lastBuildDate>
    
	<atom:link href="https://lijianqiang1997.github.io/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React初学习</title>
      <link>https://lijianqiang1997.github.io/react/react%E5%88%9D%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sat, 07 Dec 2019 19:39:52 +0800</pubDate>
      
      <guid>https://lijianqiang1997.github.io/react/react%E5%88%9D%E5%AD%A6%E4%B9%A0/</guid>
      <description> 将一个元素渲染为DOM ReactDOM.render( &amp;lt;h1&amp;gt;hello,world&amp;lt;/h1&amp;gt;, document.getElementById(&amp;quot;root&amp;quot;) )   React元素是不可变对象
 使用函数定义组件 function HelloWorld(props) { return &amp;lt;h1&amp;gt;hello,{props.name}&amp;lt;/h1&amp;gt; }  使用ES6的Class定义组件 class Welcome extends React.Component { render() { return &amp;lt;h1&amp;gt;heelo,{this.props.name}&amp;lt;/h1&amp;gt; } }   props不能在自身组件中修改
 使用state class CLock extends React.Component { constructor(props) { super(props); this.state={ date:new Date() }; } render() { return ( &amp;lt;h1&amp;gt;data:{this.state.toLocaleTimeString()}&amp;lt;/h1&amp;gt; ) } }  使用this.setState()更新组件state this.setState({data:new Date()}) 若根据state和props更新state时,this.state和this.props可能会异步更新,使用函数更新state this.setState((state,props)=&amp;gt;({ counter: state.counter+props.increament }))  </description>
    </item>
    
  </channel>
</rss>