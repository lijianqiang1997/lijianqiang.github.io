<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Js on 学习笔记</title>
    <link>https://lijianqiang1997.github.io/js/</link>
    <description>Recent content in Js on 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Nov 2019 16:38:25 +0800</lastBuildDate>
    
	<atom:link href="https://lijianqiang1997.github.io/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>自动生成类插件</title>
      <link>https://lijianqiang1997.github.io/js/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E7%B1%BB%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Wed, 27 Nov 2019 16:38:25 +0800</pubDate>
      
      <guid>https://lijianqiang1997.github.io/js/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E7%B1%BB%E6%8F%92%E4%BB%B6/</guid>
      <description>默认规则选项支持
完全自定义的匹配规则
一次性添加多条规则
 如何使用newAutoClass.js demo
if(newAutoClass) { newAutoClass.addRules({ reg: , // 匹配正则 solveFn: commonSolveFn // 处理函数 }) // 多参数 newAutoClass.addRules({ reg: , // 匹配正则 solveFn: commonSolveFn // 处理函数 },{ reg: , // 匹配正则 solveFn: commonSolveFn // 处理函数 }) // 链式操作 newAutoClass.addRules({ reg: , // 匹配正则 solveFn: commonSolveFn // 处理函数 }).addRules({ reg: , // 匹配正则 solveFn: commonSolveFn // 处理函数 }) // 使用 var autoClass = new newAutoClass([&amp;quot;width&amp;quot;,&amp;quot;height&amp;quot;,&amp;quot;margin&amp;quot;,&amp;quot;line-height&amp;quot;,&amp;quot;color&amp;quot;,&amp;quot;font-size&amp;quot;]); autoClass.run({ unit = &#39;px&#39;, base = 1, log = true }); }  默认配置支持项    默认配置 举例 说明     width width-5 w-5.</description>
    </item>
    
  </channel>
</rss>